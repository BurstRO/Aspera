swagger: '2.0'
info:
  title: The Burst API
  version: "1.0.0"
  contact:
    email: bots@cryptoguru.org

host: localhost:8125
basePath: /api/v1
produces:
  - application/json
schemes:
  - https
  - http
  
tags:
  - name: All
    description: Every API call
  - name: Server
    description: Get basic information about this wallet
  - name: Account
    description: Account operations
  - name: Transactions
    description: Transactional operations
  - name: Aliases
    description: Alias operations
  - name: Asset Exchange
    description: AE operations
  - name: Digital Goods Store
    description: DGS operations
  - name: Messages
    description: Arbitrary Message System operations
  - name: Blocks
    description: Get information about blocks
  - name: Mining
    description: Mining operations
  - name: Automated Transaction
    description: AT operations
  - name: Utils
    description: Utilities

paths:
  /server/getMyInfo:
    get:
      tags:
        - Server
        - All
      summary: Get hostname and address of the requesting node.
      operationId: getMyInfo
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              address:
                type: string
                description: IP address of the current node
              host:
                type: string
                description: Current host
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /server/getBlockchainStatus:
    get:
      tags:
        - Server
        - All
      summary: Get general informations about the Burst blockchain.
      operationId: getBlockchainStatus
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              lastBlock:
                type: string
                description:  Last block ID on the blockchain
              application:
                type: string
                description:  Application name, typically BRS
              isScanning:
                type: boolean
                description: True if the blockchain is being scanned by the application, false otherwise
              cumulativeDifficulty:
                type: string
              lastBlockchainFeederHeight:
                type: integer
                description: Height of the last blockchain of greatest cumulative difficulty obtained from a peer
              numberOfBlocks:
                type: integer
                description: Nnumber of blocks in the blockchain (height + 1)
              time:
                type: integer
                description: Current timestamp (in seconds since the genesis block)
              version:
                type: string
                description: Application version
              lastBlockchainFeeder:
                type: string
                description: Address or announced address of the peer providing the last blockchain of greatest cumulative difficulty
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /server/getConstants:
    get:
      tags:
        - Server
        - All
      summary: Get all defined constants.
      operationId: getConstants
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              maxBlockPayloadLength:
                type: integer
                description: Maximum block payload length (in bytes)
              genesisAccountId:
                type: string
                description: Genesis account number
              genesisBlockId:
                type: string
                description: Genesis block ID
              transactionTypes:
                type: array
                description: Array of defined transaction types and subtypes
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Name of the feature
                    value:
                      type: integer
                      description: ID of the feature
                    subtypes:
                      type: array
                      items:
                        type: object
                        properties:
                          description:
                            type: string
                            description: Name of the action
                          value:
                            type: integer
                            description: ID of the action
              peerStates:
                type: array
                description: Array of defined peer states 
                items:
                  type: object
                  properties:
                    description:
                      type: string
                      description: Name of the state
                    value:
                      type: integer
                      description: ID of the state
              maxArbitraryMessageLength:
                type: integer
                description: Maximum length in bytes of an arbitrary message
              requestTypes:
                type: object
        '400':
          description: Bad request.
      deprecated: false
  /server/getPeer:
    get:
      tags:
        - Server
        - All
      summary: Get basic information of a peer.
      operationId: getPeer
      parameters:
        - in: query
          name: peer
          type: string
          allowEmptyValue: false
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              lastUpdated:
                type: integer
                description: Timestamp (in seconds since the genesis block) of the last peer status update
              downloadedVolume:
                type: integer
                description: Number of bytes downloaded by the peer
              blacklisted:
                type: boolean
                description: True if the peer is blacklisted
              announcedAddress:
                type: string
                description: Name that the peer announced to the network (could be a DNS name, IP address, or any other string)
              application:
                type: string
                description: Name of the software application, typically BRS
              uploadedVolume:
                type: integer
                description: Number of bytes uploaded by the peer
              state:
                type: integer
                description: State of the peer - 0 for NON_CONNECTED, 1 for CONNECTED, or 2 for DISCONNECTED
              version:
                type: string
                description: Version of the software running on the pee
              platform:
                type: string
                description: String representing the peer's platform
              shareAddress:
                type: boolean
                description: True if the address is allowed to be shared with other peers
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /server/getPeers:
    get:
      tags:
        - Server
        - All
      summary: Get IP of all connected peers.
      operationId: getPeers
      parameters:
        - in: query
          name: active
          type: boolean
          allowEmptyValue: false
          required: false
        - in: query
          name: state
          type: string
          allowEmptyValue: false
          required: false
          enum: [NON_CONNECTED, CONNECTED, DISCONNECTED]
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              peers:
                type: array
                description: Array of peer addresses
                items:
                  type: string
                  description: IP address of the peers
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /server/getState:
    get:
      tags:
        - Server
        - All
      summary: Get the state of the Burst Network.
      description: ''
      operationId: getState
      parameters:
        - in: query
          name: includeCounts
          type: boolean
          allowEmptyValue: true
          required: false
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              numberOfTransfers:
                #NULL if includeCounts = false
                type: integer
                description: Number of Asset Exchange transfers in the blockchain
              numberOfOrders:
                #NULL if includeCounts = false
                type: integer
                description: Number of Asset Exchange orders in the blockchain
              numberOfTransactions:
                #NULL if includeCounts = false
                type: integer
                description: Number of transactions in the blockchain
              numberOfAskOrders:
                #NULL if includeCounts = false
                type: integer
                description: Number of Asset Exchange ask orders in the blockchain
              numberOfBidOrders:
                #NULL if includeCounts = false
                type: integer
                description: Number of Asset Exchange bid orders in the blockchain
              numberOfAliases:
                #NULL if includeCounts = false
                type: integer
                description: Number of aliases in the blockchain
              numberOfAssets:
                #NULL if includeCounts = false
                type: integer
                description: Number of AE assets in the blockchain
              numberOfAccounts:
                #NULL if includeCounts = false
                type: integer
                description: Number of accounts in the blockchain
              numberOfBlocks:
                #NULL if includeCounts = false
                type: integer
                description: Number of blocks (height + 1) in the blockchain
              numberOfTrades:
                #NULL if includeCounts = false
                type: integer
                description: Number of AE trades in the blockchain
              numberOfPeers:
                #!!! NOT NULL even if includeCounts = false !!!
                type: integer
                description: Number of known peers on the network
              numberOfUnlockedAccounts:
                #!!! NOT NULL even if includeCounts = false !!!
                type: integer
                description: Number of unlocked accounts on this node
              maxMemory:
                type: integer
                description: Maximum amount of memory the node may use (in Bytes)
              isScanning:
                type: boolean
                description: True if this node is scanning the blockchain, false otherwise
              cumulativeDifficulty:
                type: string
                description: Current cumulative forging difficulty
              freeMemory:
                type: integer
                description: Amount of free memory on this node (in Bytes)
              availableProcessors:
                type: integer
                description: Number of processors on this node
              totalEffectiveBalanceNXT:
                type: integer
                description: Total effective Balance of the network in BURST
              version:
                type: string
                description: Software version on this node
              lastBlock:
                type: string
                description: Last block address
              totalMemory:
                type: integer
                description: Amount of memory this node is using (in Bytes)
              application:
                type: string
                description: Name of the software running on this node (typically BRS)
              lastBlockchainFeederHeight:
                type: integer
                description: Height of the last blockchain feeder
              time:
                type: integer
                description: Current node time (in seconds since the genesis block)
              lastBlockchainFeeder:
                type: string
                description: Announced name of the feeder of the last blockchain
              requestProcessingTime:
                type: integer
      deprecated: false
  /server/getTime:
    get:
      tags:
        - Server
        - All
      summary: Get the current time.
      operationId: getTime
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              time:
                type: integer
                description: Current node time (in seconds since the genesis block)
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /account/getAccount:
    get:
      tags:
        - Account
        - All
      summary: Get information about a specific account.
      operationId: getAccount
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              unconfirmedBalanceNQT:
                type: string
              guaranteedBalanceNQT:
                type: string
              unconfirmedAssetBalances:
                type: array
                items:
                  type: object
                  properties:
                    unconfirmedBalanceQNT:
                      type: string
                    asset:
                      type: string
              effectiveBalanceNXT:
                type: string
              accountRS:
                type: string
              name:
                type: string
              forgedBalanceNQT:
                type: string
              balanceNQT:
                type: string
              publicKey:
                type: string
              assetBalances:
                type: array
                items:
                  type: object
                  properties:
                    balanceQNT:
                      type: string
                    asset:
                      type: string
              account:
                type: string
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /account/getAccountATs:
    get:
      tags:
        - Account
        - All
      summary: Get all running ATs of an account.
      operationId: getAccountATs
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              ats:
                type: array
                items:
                  type: object
                  properties:
                    atVersion:
                      type: integer
                    creator:
                      type: string
                    creatorRS:
                      type: string
                    stopped:
                      type: boolean
                    machineCode:
                      type: string
                    description:
                      type: string
                    machineData:
                      type: string
                    frozen:
                      type: boolean
                    finished:
                      type: boolean
                    dead:
                      type: boolean
                    balanceNQT:
                      type: string
                    nextBlock:
                      type: integer
                    minActivation:
                      type: string
                    running:
                      type: boolean
                    at:
                      type: string
                    name:
                      type: string
                    atRS:
                      type: string
                    prevBalanceNQT:
                      type: string
                    creationBlock:
                      type: integer
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /account/getAccountBlockIds:
    get:
      tags:
        - Account
        - All
      summary: Get the block IDs of all blocks forged (generated) by an account in reverse block height order..
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
        - in: query
          name: timestamp
          type: integer
          allowEmptyValue: false
          required: false
        - in: query
          name: firstIndex
          type: integer
          allowEmptyValue: false
          required: false
        - in: query
          name: lastIndex
          type: integer
          allowEmptyValue: false
          required: false          
      operationId: getAccountBlockIds
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              ats:
                type: array
                items:
                  type: string
              requestProcessingTime:
                  type: integer
        '400':
          description: Bad request.
      deprecated: false
  /account/getAccountBlocks:
    get:
      tags:
        - Account
        - All
      summary: Get the block IDs of all blocks forged (generated) by an account in reverse block height order..
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
        - in: query
          name: timestamp
          type: integer
          allowEmptyValue: false
          required: false
        - in: query
          name: firstIndex
          type: integer
          allowEmptyValue: false
          required: false
        - in: query
          name: lastIndex
          type: integer
          allowEmptyValue: false
          required: false 
        - in: query
          name: includeTransactions
          type: boolean
          allowEmptyValue: false
          required: false 
      operationId: getAccountBlocks
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              blocks:
                type: array
                items:
                  type: object
                  properties:
                    previousBlockHash:
                      type: string
                    payloadLength:
                      type: integer
                    totalAmountNQT:
                      type: string
                    generationSignature:
                      type: string
                    generator:
                      type: string
                    generatorPublicKey:
                      type: string
                    baseTarget:
                      type: string
                    payloadHash:
                      type: string
                    generatorRS:
                      type: string
                    blockReward:
                      type: string
                    nextBlock:
                      type: string
                    scoopNum:
                      type: string
                    numberOfTransactions:
                      type: integer
                    blockSignature:
                      type: string
                    transactions:
                      type: array
                      items:
                        type: string
                    nonce:
                      type: string
                    version:
                      type: integer
                    totalFeeNQT:
                      type: string
                    previousBlock:
                      type: string
                    block:
                      type: string
                    height:
                      type: integer
                    timestamp:
                      type: integer
              requestProcessingTime:
                  type: integer
        '400':
          description: Bad request.
      deprecated: false
  /mining/getAccountsWithRewardRecipient:
    get:
      tags:
        - Mining
        - All
      summary: Get all pool members of a specific account.
      operationId: getAccountsWithRewardRecipient
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: string
              requestProcessingTime:
                type: integer
        '400':
          description: Invalid account.
        '404':
          description: Account not found.
      deprecated: false
  /mining/getMiningInfo:
    get:
      tags:
        - Mining
        - All
      summary: Get information needed to mine the current block.
      operationId: getMiningInfo
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              generationSignature:
                type: string
              baseTarget:
                type: integer
              height:
                type: integer
              requestProcessingTime:
                type: integer
        '400':
          description: Bad request.
      deprecated: false
  /mining/getRewardRecipient:
    get:
      tags:
        - Mining
        - All
      summary: Get the reward recipient of a specific account.
      operationId: getRewardRecipient
      parameters:
        - in: query
          name: account
          type: string
          allowEmptyValue: false
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              rewardRecipient:
                type: string
              requestProcessingTime:
                type: integer
      deprecated: false

parameters:
  #Common parameters for Transactions
  recipient:
    in: query
    name: recipient
    type: string
    description: Account ID of the recipient
    allowEmptyValue: false
    required: true
  amountNQT:
    in: query
    name: amountNQT
    type: string
    description: Amount (in NQT) in the transaction
    allowEmptyValue: false
    required: true
  secretPhrase:
    in: query
    name: secretPhrase
    type: string
    description: Secret passphrase of the signing account
    allowEmptyValue: true
    required: false
  publicKey:
    in: query
    name: publicKey
    type: string
    description: Public key of the account (optional if secretPhrase provided)
    allowEmptyValue: false
    required: false
  feeNQT:
    in: query
    name: feeNQT
    type: string
    description: Fee (in NQT) for the transaction
    allowEmptyValue: true
    required: false
  deadline:
    in: query
    name: deadline
    type: integer
    description: Deadline (in minutes) for the transaction to be confirmed, 1440 minutes maximum
    allowEmptyValue: false
    required: true
  referencedTransactionFullHash:
    in: query
    name: referencedTransactionFullHash
    type: string
    description: Referenced Transaction FullHash parameter to create a chained transaction
    allowEmptyValue: false
    required: false
  broadcast:
    in: query
    name: broadcast
    type: boolean
    description: False to prevent broadcasting the transaction to the network
    default: true
    allowEmptyValue: false
    required: false
  message:
    in: query
    name: message
    type: string
    description: Either UTF-8 text or a string of hex digits to be converted into a bytecode with a maximum length of one kilobyte
    allowEmptyValue: false
    required: false
  messageIsText:
    in: query
    name: messageIsText
    type: boolean
    description: False if the message is a hex string, otherwise the message is text
    allowEmptyValue: false
    required: false
  messageToEncrypt:
    in: query
    name: messageToEncrypt
    type: string
    description: UTF-8 text or a string of hex digits to be compressed and converted into a bytecode with a maximum length of one kilobyte, then encrypted using AES
    allowEmptyValue: false
    required: false
  messageToEncryptIsText:
    in: query
    name: messageToEncryptIsText
    type: boolean
    description: False if the message to encrypt is a hex string, otherwise the message to encrypt is text
    allowEmptyValue: false
    required: false
  encryptedMessageData:
    in: query
    name: encryptedMessageData
    type: string
    description: Already encrypted data which overrides messageToEncrypt if provided
    allowEmptyValue: false
    required: false
  encryptedMessageNonce:
    in: query
    name: encryptedMessageData
    type: string
    description: Unique 32-byte number which cannot be reused (optional unless encryptedMessageData is provided)
    allowEmptyValue: false
    required: false
  messageToEncryptToSelf:
    in: query
    name: messageToEncryptToSelf
    type: string
    description: Either UTF-8 text or a string of hex digits to be compressed and converted into a one kilobyte maximum bytecode then encrypted with AES, then sent to the sending account
    allowEmptyValue: false
    required: false
  messageToEncryptToSelfIsText:
    in: query
    name: messageToEncryptToSelf
    type: boolean
    description: False if the message to self-encrypt is a hex string, otherwise the message to encrypt is text
    allowEmptyValue: false
    required: false
  encryptToSelfMessageData:
    in: query
    name: encryptToSelfMessageData
    type: string
    description: Already encrypted data which overrides messageToEncryptToSelf if provided
    allowEmptyValue: false
    required: false
  encryptToSelfMessageNonce:
    in: query
    name: encryptToSelfMessageNonce
    type: string
    description: Unique 32-byte number which cannot be reused (optional unless encryptToSelfMessageData is provided)
    allowEmptyValue: false
    required: false
  recipientPublicKey:
    in: query
    name: recipientPublicKey
    type: string
    description: Public key of the receiving account (optional, enhances security of a new account)
    allowEmptyValue: false
    required: false